{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.4", "generated_at": "2025-06-05T02:37:28.173039Z", "invocation_id": "c40209ec-bb2c-4d71-8c64-b3fceca3a0e5", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-05T02:37:25.954236Z", "completed_at": "2025-06-05T02:37:25.954239Z"}, {"name": "execute", "started_at": "2025-06-05T02:37:25.954436Z", "completed_at": "2025-06-05T02:37:27.687436Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 1.7341961860656738, "adapter_response": {"_message": "INSERT 62516", "code": "INSERT", "rows_affected": 62516}, "message": "INSERT 62516", "failures": null, "unique_id": "seed.consumer_complaints.consumer_complaints", "compiled": null, "compiled_code": null, "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-05T02:37:27.691577Z", "completed_at": "2025-06-05T02:37:27.698376Z"}, {"name": "execute", "started_at": "2025-06-05T02:37:27.698651Z", "completed_at": "2025-06-05T02:37:27.990920Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.30010294914245605, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.consumer_complaints.stg_consumer_complaints", "compiled": true, "compiled_code": "with source as (\n\n    select * from \"dev\".\"main\".\"consumer_complaints\"\n    qualify row_number() over (partition by complaint_id order by date_received desc) = 1\n),\n\ncleaned as (\n\n    select\n        cast(complaint_id as bigint) as complaint_id,\n        cast(date_submitted as date) as date_submitted,\n        cast(date_received as date) as date_received,\n        upper(trim(state)) as state,\n        lower(trim(product)) as product,\n        lower(trim(sub_product)) as sub_product,\n        lower(trim(issue)) as issue,\n        lower(trim(sub_issue)) as sub_issue,\n        lower(trim(submitted_via)) as submitted_via,\n        lower(trim(company_response_to_consumer)) as company_response_to_consumer,\n        coalesce(lower(trim(company_public_response)), 'no_public_response') as company_public_response,\n\n        -- Derived columns\n        case \n            when lower(trim(submitted_via)) in ('web', 'email') then 'digital'\n            when lower(trim(submitted_via)) in ('phone', 'fax') then 'phone'\n            else 'other'\n        end as contact_channel,\n\n        -- Resolution type\n        case \n            when company_response_to_consumer ilike '%monetary%' then 'compensation'\n            when company_response_to_consumer ilike '%non-monetary%' then 'compensation'\n            when company_response_to_consumer ilike '%explanation%' then 'explanation'\n            when company_response_to_consumer ilike '%in progress%' then 'in_progress'\n            when company_response_to_consumer is null then 'no_response'\n            else 'other'\n        end as resolution_type,\n\n        -- Product group\n        case\n            when product like '%card%' then 'card'\n            when product like '%loan%' then 'loan'\n            when product like '%mortgage%' then 'mortgage'\n            when product like '%credit%' then 'credit'\n            else 'other'\n        end as product_group,\n\n        -- Time metric\n        (date_received - date_submitted) as response_days\n\n\n    from source\n    where complaint_id is not null\n)\n\nselect * from cleaned", "relation_name": "\"dev\".\"main\".\"stg_consumer_complaints\"", "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-05T02:37:27.993770Z", "completed_at": "2025-06-05T02:37:28.001800Z"}, {"name": "execute", "started_at": "2025-06-05T02:37:28.002064Z", "completed_at": "2025-06-05T02:37:28.019543Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.027733564376831055, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.consumer_complaints.accepted_values_stg_consumer_complaints_contact_channel__digital__phone__other.5051ce79d4", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        contact_channel as value_field,\n        count(*) as n_records\n\n    from \"dev\".\"main\".\"stg_consumer_complaints\"\n    group by contact_channel\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'digital','phone','other'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-05T02:37:28.022937Z", "completed_at": "2025-06-05T02:37:28.028298Z"}, {"name": "execute", "started_at": "2025-06-05T02:37:28.028774Z", "completed_at": "2025-06-05T02:37:28.036902Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.01596832275390625, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.consumer_complaints.accepted_values_stg_consumer_complaints_resolution_type__compensation__explanation__in_progress__no_response__other.353c24a38e", "compiled": true, "compiled_code": "\n    \n    \n\nwith all_values as (\n\n    select\n        resolution_type as value_field,\n        count(*) as n_records\n\n    from \"dev\".\"main\".\"stg_consumer_complaints\"\n    group by resolution_type\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'compensation','explanation','in_progress','no_response','other'\n)\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-05T02:37:28.040475Z", "completed_at": "2025-06-05T02:37:28.045294Z"}, {"name": "execute", "started_at": "2025-06-05T02:37:28.045535Z", "completed_at": "2025-06-05T02:37:28.049904Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.011059045791625977, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.consumer_complaints.not_null_stg_consumer_complaints_complaint_id.0215f5ce0e", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect complaint_id\nfrom \"dev\".\"main\".\"stg_consumer_complaints\"\nwhere complaint_id is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-05T02:37:28.052954Z", "completed_at": "2025-06-05T02:37:28.055569Z"}, {"name": "execute", "started_at": "2025-06-05T02:37:28.055816Z", "completed_at": "2025-06-05T02:37:28.060612Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009424209594726562, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.consumer_complaints.not_null_stg_consumer_complaints_date_received.93c385da63", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect date_received\nfrom \"dev\".\"main\".\"stg_consumer_complaints\"\nwhere date_received is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-05T02:37:28.063818Z", "completed_at": "2025-06-05T02:37:28.066656Z"}, {"name": "execute", "started_at": "2025-06-05T02:37:28.066914Z", "completed_at": "2025-06-05T02:37:28.071309Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009230613708496094, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.consumer_complaints.not_null_stg_consumer_complaints_product.2311150918", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect product\nfrom \"dev\".\"main\".\"stg_consumer_complaints\"\nwhere product is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-05T02:37:28.074680Z", "completed_at": "2025-06-05T02:37:28.079115Z"}, {"name": "execute", "started_at": "2025-06-05T02:37:28.079416Z", "completed_at": "2025-06-05T02:37:28.090365Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.017513513565063477, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.consumer_complaints.unique_stg_consumer_complaints_complaint_id.0b3cb0d4c7", "compiled": true, "compiled_code": "\n    \n    \n\nselect\n    complaint_id as unique_field,\n    count(*) as n_records\n\nfrom \"dev\".\"main\".\"stg_consumer_complaints\"\nwhere complaint_id is not null\ngroup by complaint_id\nhaving count(*) > 1\n\n\n", "relation_name": null, "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-05T02:37:28.094002Z", "completed_at": "2025-06-05T02:37:28.095987Z"}, {"name": "execute", "started_at": "2025-06-05T02:37:28.096241Z", "completed_at": "2025-06-05T02:37:28.122486Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.029297351837158203, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.consumer_complaints.mrt_monthly_summary", "compiled": true, "compiled_code": "-- Evoluci\u00f3n mensual de quejas + resoluci\u00f3n favorable\n\nwith source as (\n\n    select\n        date_trunc('month', date_received) as month,\n        product_group,\n        resolution_type\n    from \"dev\".\"main\".\"stg_consumer_complaints\"\n\n),\n\nms as (\n\n    select\n        month,\n        product_group,\n        count(*) as total_complaints,\n        sum(case when resolution_type in ('compensation', 'explanation') then 1 else 0 end) as resolved_favorably,\n        round(100.0 * sum(case when resolution_type in ('compensation', 'explanation') then 1 else 0 end) / count(*), 2) as pct_resolved_favorably\n    from source\n    group by 1, 2\n\n)\n\nselect * from ms", "relation_name": "\"dev\".\"main\".\"mrt_monthly_summary\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-06-05T02:37:28.125245Z", "completed_at": "2025-06-05T02:37:28.127147Z"}, {"name": "execute", "started_at": "2025-06-05T02:37:28.127394Z", "completed_at": "2025-06-05T02:37:28.146251Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.021811962127685547, "adapter_response": {"_message": "OK"}, "message": "OK", "failures": null, "unique_id": "model.consumer_complaints.mrt_state_resolution", "compiled": true, "compiled_code": "with source as (\n\n    select\n        state,\n        resolution_type\n    from \"dev\".\"main\".\"stg_consumer_complaints\"\n\n),\n\nsr as (\n\n    select\n        state,\n        count(*) as total_complaints,\n        sum(case when resolution_type = 'no_response' then 1 else 0 end) as no_response_count,\n        round(100.0 * sum(case when resolution_type = 'no_response' then 1 else 0 end) / count(*), 2) as pct_no_response\n    from source\n    group by 1\n\n)\n\nselect * from sr", "relation_name": "\"dev\".\"main\".\"mrt_state_resolution\"", "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-05T02:37:28.148816Z", "completed_at": "2025-06-05T02:37:28.151516Z"}, {"name": "execute", "started_at": "2025-06-05T02:37:28.151785Z", "completed_at": "2025-06-05T02:37:28.156022Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.008989810943603516, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.consumer_complaints.not_null_mrt_monthly_summary_month.f05556ae72", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect month\nfrom \"dev\".\"main\".\"mrt_monthly_summary\"\nwhere month is null\n\n\n", "relation_name": null, "batch_results": null}, {"status": "pass", "timing": [{"name": "compile", "started_at": "2025-06-05T02:37:28.159203Z", "completed_at": "2025-06-05T02:37:28.162458Z"}, {"name": "execute", "started_at": "2025-06-05T02:37:28.162757Z", "completed_at": "2025-06-05T02:37:28.167181Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.009673833847045898, "adapter_response": {"_message": "OK"}, "message": null, "failures": 0, "unique_id": "test.consumer_complaints.not_null_mrt_state_resolution_state.a5d36ac884", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect state\nfrom \"dev\".\"main\".\"mrt_state_resolution\"\nwhere state is null\n\n\n", "relation_name": null, "batch_results": null}], "elapsed_time": 3.8214094638824463, "args": {"log_path": "C:\\Users\\danie\\Desktop\\Consumer_Complaints\\logs", "cache_selected_only": false, "invocation_command": "dbt build", "select": [], "favor_state": false, "log_format": "default", "show": false, "send_anonymous_usage_stats": true, "require_resource_names_without_spaces": false, "exclude_resource_types": [], "introspect": true, "source_freshness_run_project_hooks": false, "version_check": true, "indirect_selection": "eager", "vars": {}, "warn_error_options": {"include": [], "exclude": []}, "export_saved_queries": false, "static_parser": true, "defer": false, "profiles_dir": "C:\\Users\\danie\\.dbt", "require_nested_cumulative_type_params": false, "populate_cache": true, "partial_parse": true, "empty": false, "log_level": "info", "include_saved_query": false, "project_dir": "C:\\Users\\danie\\Desktop\\Consumer_Complaints", "write_json": true, "macro_debugging": false, "state_modified_compare_more_unrendered_values": false, "skip_nodes_if_on_run_start_fails": false, "strict_mode": false, "use_colors": true, "quiet": false, "resource_types": [], "exclude": [], "partial_parse_file_diff": true, "log_file_max_bytes": 10485760, "require_yaml_configuration_for_mf_time_spines": false, "printer_width": 80, "require_batched_execution_for_custom_microbatch_strategy": false, "log_level_file": "debug", "log_format_file": "debug", "require_explicit_package_overrides_for_builtin_materializations": true, "show_resource_report": false, "use_colors_file": true, "which": "build", "state_modified_compare_vars": false, "print": true}}